# File: power_module.template
# Date: 2017-06-26
# Author: Wayne Lewis
#
# Description:
# Database for getting MTCA crate power module sensors
#
# Macros:
# P:    PV prefix
# UNIT: Power module number

record(ai, "$(P)$(R)$(S)Volt12V-Mon") {
    field(DESC, "12 V supply (0)")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 12V0")
    field(PREC, "2")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)Volt12V1-Mon") {
    field(DESC, "12 V supply (1)")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 12V0_1")
    field(PREC, "2")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)Volt5V-Mon") {
    field(DESC, "5.0 V supply")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 5V0")
    field(PREC, "2")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)Volt5V1-Mon") {
    field(DESC, "5.0 V supply")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 5V0_1")
    field(PREC, "2")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)Volt3V3-Mon") {
    field(DESC, "3.3 V supply")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) 3V3")
    field(PREC, "2")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)TempInlet-Mon") {
    field(DESC, "Temperature inlet")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) TEMP_INLET")
    field(PREC, "1")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)TempOutlet-Mon") {
    field(DESC, "Temperature outlet")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) TEMP_OUTLET")
    field(PREC, "1")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)Temp1-Mon") {
    field(DESC, "Temperature 1")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) TEMP1")
    field(PREC, "1")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)Temp2-Mon") {
    field(DESC, "Temperature 2")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) TEMP2")
    field(PREC, "1")

    info(archive,"monitor:5.0")
}

record(ai, "$(P)$(R)$(S)CurrTotal-Mon") {
    field(DESC, "Total current")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_val pm $(UNIT) I_TOTAL")
    field(PREC, "2")

    info(archive,"monitor:5.0")
}

record(stringin, "$(P)$(R)$(S)BoardName-Cte") {
    field(DESC, "Card name")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_name pm $(UNIT)")
}

record(ai, "$(P)$(R)$(S)Slot-Cte") {
    field(DESC, "Slot number")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_slot pm $(UNIT)")
    field(PREC, "0")
    field(EGU,  "None")
}

#record(bi, "$(P)$(S)HotSwap-Sts") {
    #field(DESC, "Hot swap status")
    #field(DTYP, "Python Device")
    #field(SCAN, "I/O Intr")
    #field(INP,  "@MTCACrate get_val pm $(UNIT) HOT_SWAP")
    #field(ZNAM, "Fault")
    #field(ZSV,  "MAJOR")
    #field(ONAM, "OK")
    #field(OSV,  "NO_ALARM")
#}

record(mbbi, "$(P)$(R)$(S)SlotAlarm-Sts") {
    field(DESC, "Slot alarm status")
    field(DTYP, "Python Device")
    field(SCAN, "I/O Intr")
    field(INP,  "@MTCACrate get_status pm $(UNIT)")
    field(ZRVL, "0")
    field(ZRST, "UNSET")
    field(ZRSV, "NO_ALARM")
    field(ONVL, "1")
    field(ONST, "NO_ALARM")
    field(ONSV, "NO_ALARM")
    field(TWVL, "2")
    field(TWST, "NON_CRITICAL")
    field(TWSV, "MINOR")
    field(THVL, "3")
    field(THST, "CRITICAL")
    field(THSV, "MAJOR")
    field(FRVL, "4")
    field(FRST, "NON_RECOVERABLE")
    field(FRSV, "MAJOR")

    info(archive,"monitor:5.0")
}

record(calcout, "$(P)$(R)$(S)Power-Calc") {
    field(DESC, "Power module power calculation")
    # Based on conversation with Scott Cogan, use nominal 12 VDC
    field(INPA, "12")
    # Uncomment this line and comment above line to use sensor voltage
    #field(INPA, "$(P)$(R)$(S)Volt12V-Mon CPP")
    field(INPB, "$(P)$(R)$(S)CurrTotal-Mon CPP")
    field(CALC, "A*B")
    field(OOPT, "On Change")
    field(OUT,  "$(P)$(R)$(S)Power-Mon PP")
}

record(ai, "$(P)$(R)$(S)Power-Mon") {
    field(DESC, "Power module power")
    field(EGU,  "W")
    field(PREC, "1")

    info(archive,"monitor:5.0")
}

record(bi, "$(P)$(R)$(S)Comm-Sts") {
	field(DESC, "$(S) communications status")
	field(DTYP, "Python Device")
	field(SCAN, "I/O Intr")
	field(INP,  "@MTCACrate get_comms_sts pm $(UNIT)")
	field(ZNAM, "Error")
	field(ZSV,  "MAJOR")
	field(ONAM, "OK")
	field(OSV,  "NO_ALARM")

    info(archive,"monitor:5.0")
}

